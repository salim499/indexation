[{"E:\\indexation\\src\\index.js":"1","E:\\indexation\\src\\App.js":"2","E:\\indexation\\src\\reportWebVitals.js":"3","E:\\indexation\\src\\FireStore.js":"4","E:\\indexation\\src\\getDataFromApi.js":"5","E:\\indexation\\src\\Result.js":"6","E:\\indexation\\src\\WordCloud.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":2651,"mtime":1609375305137,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":730,"mtime":1609367869859,"results":"12","hashOfConfig":"9"},{"size":2110,"mtime":1609356056456,"results":"13","hashOfConfig":"9"},{"size":3523,"mtime":1609383112643,"results":"14","hashOfConfig":"9"},{"size":414,"mtime":1609102566462,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bn064p",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"E:\\indexation\\src\\index.js",[],["33","34"],"E:\\indexation\\src\\App.js",["35","36"],"import React from 'react'\nimport {useState,  useEffect, useRef } from 'react'\nimport logo from './logo.svg';\nimport './Searchbar.css'\nimport './App.css'\nimport Rs from './Result.js'\nimport firebase from './FireStore'\nimport GetData from './getDataFromApi'\n\n\n\nfunction App() {\n  const inputRef=useRef(null)\n  const [Data, setData]=useState([])\n  const [Result, setResult]=useState([])\n // GetData()\n  function submitRequestF(){\n\n    let result=[]\n    let splitRequest=inputRef.current.value.split(\" \")\n    let words=splitRequest.filter(word=>word.length>0)\n// firstMode\n\n    words.forEach(word=>{\n      // get the first part of word request\n      let firstPartR = word.substr(0, word.length / 2)  \n      // get the second part of word request\n      let secondPartR = word.substr(word.length / 2, word.length)\n      firebase.firestore().collection(\"WordsWeights\")\n      .get()\n      .then((data)=>{\n      data.forEach(e=>{\n      // get the first part of word bdd\n      let firstPartW = e.data().text.substr(0, e.data().text.length / 2)  \n      // get the second part of word bdd\n      let secondPartW = e.data().text.substr(e.data().text.length / 2, e.data().text.length)\n\n      //count\n      let count=0\n      for (let i = 0; i < firstPartR.length; i++) {\n        if(firstPartW.includes(firstPartR.charAt(i))){\n        count=count+1\n        }\n      }\n      for (let i = 0; i < secondPartR.length; i++) {\n        if(secondPartW.includes(secondPartR.charAt(i))){\n          count=count+1\n        }\n      }\n      if(word.length-count<2){\n        \n        result.push({id:e.id,data:e.data()})\n        setData(Data => [...Data, {id:e.id,data:e.data()}]);\n      }\n\n    })  \n  })\n      //console.log(\"data \"+doc.data().text.length,\"count \"+count,\"request \"+sentence.length)\n    })\n    setData(result)\n  }\n\n\n  useEffect(()=>{\n      setData(Data)\n      console.log(Data)\n  },[Data])\n\n  return(\n    <React.Fragment>\n      {console.log(Result)}\n      <header className=\"App-header\">\n      <React.Fragment>\n        <div className=\"logo\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <img alt=\"Google\" src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"></img>\n        </div>\n        <div className=\"bar\">\n          <input class=\"searchbar\" type=\"text\" title=\"Search\" ref={inputRef}></input>\n        </div>\n        <div className=\"buttons\">\n          <button className=\"button\"  onClick={submitRequestF}>Recherche</button>\n         </div>\n    </React.Fragment>\n    </header>\n        <div className=\"results\">\n        <Rs Data={Data}></Rs>\n      </div>\n\n    </React.Fragment>\n  ) \n}\n\nexport default App;\n","E:\\indexation\\src\\reportWebVitals.js",[],"E:\\indexation\\src\\FireStore.js",[],"E:\\indexation\\src\\getDataFromApi.js",["37"],"import React, {useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport firebase from \"./FireStore\";\r\n\r\nconst endPoint=\"http://localhost/indexation_second_version/\"\r\nfunction App() {\r\n\r\n  useEffect(()=>{\r\n    // get array of objects from api\r\n    axios.get(endPoint)\r\n    .then(response=>{\r\n      response.data.forEach(file => {\r\n        console.log(file.title)\r\n        // post path of file to bdd\r\n        firebase.firestore().collection(\"Files\")\r\n        .add({file:file.file})\r\n        // if post to bdd succed \r\n        .then(res=>{\r\n        // add props of each file\r\n        firebase.firestore().collection(\"Props\") \r\n        .doc(res.id)\r\n        .set ({title:file.title,description:file.descriptions,keywords:file.keywords})\r\n        .then(e=>console.log(e))\r\n        .catch(err=>console.log(err))\r\n        // end of ading porops of each file \r\n        // concat words of body and head\r\n        const object={}\r\n        for (const key in file.head){\r\n          object[key]=file.head[key]\r\n        }\r\n        for (const key2 in file.body){\r\n          if(object[key2]>0){\r\n            console.log(key2+\" => \"+object[key2])\r\n            object[key2]=object[key2]+file.body[key2]\r\n          }else{\r\n            object[key2]=file.body[key2]\r\n          }\r\n        }  \r\n        ////////////////////////// \r\n        // post wods with her weight to bdd\r\n        for (const key in object){\r\n          firebase.firestore().collection(\"WordsWeights\")\r\n          .add({text:key, weight:object[key], file:res.id})\r\n          .then(res=>console.log((\"le mot avec le poid sont ajoutés avec succès\")))\r\n          .catch(err=>console.log(\"erreur dans le post des mots et leur poids sur la bdd\"))\r\n        }\r\n        })\r\n        //////////////////////////\r\n        // if post fail \r\n        .catch(err=>console.log(\"erreur dans la demande pour ajouter les fichier dans la base de données\"))\r\n        //fin ajout fichier to bdd\r\n      });      \r\n    })\r\n    .catch(err=>{\r\n      console.log(\"erreur dans la demande au serveur de l'indexation\")\r\n    })\r\n  })\r\n\r\n  return (\r\n   null\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\indexation\\src\\Result.js",["38"],"E:\\indexation\\src\\WordCloud.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":15,"column":18,"nodeType":"45","messageId":"46","endLine":15,"endColumn":27},{"ruleId":"43","severity":1,"message":"48","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":72,"column":7,"nodeType":"51","endLine":72,"endColumn":14,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'GetData' is defined but never used.","Identifier","unusedVar","'setResult' is assigned a value but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataG'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [dataG, props]",{"range":"58","text":"59"},[2086,2093],"[dataG, props]"]